/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ccvalidator;

/**
 *
 * @author Mosaab Alzoubi
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        EnteredText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        ResultText = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CCValidator By Mosaab");
        setLocation(new java.awt.Point(800, 800));
        setLocationByPlatform(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("CCValidator");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("By Mosaab for UPM SE Telegram group competition");
        jLabel2.setToolTipText("");

        jLabel3.setText("Result:");

        EnteredText.setName("EnteredText"); // NOI18N

        jButton1.setText("Validate...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ResultText.setText("Enter A Card to Validate");
        ResultText.setName("ResultText"); // NOI18N

        jLabel5.setText("Enter CC Number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EnteredText, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(ResultText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnteredText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResultText, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ResultText.setText("CARD NOT VALID");
        String x = EnteredText.getText();
        if(x.length()>16 || x.length()<13){
            ResultText.setText("Max length is 16 and Min is 13!");
        }
        else{
            if(x.equals("")){
                ResultText.setText("No card data entered!");
            }
            else{
                if(x.matches("[0-9]+")){
                    int c0 = Integer.parseInt(String.valueOf(x.charAt(0)));
                    int c1 = Integer.parseInt(String.valueOf(x.charAt(1)));
                    int c2 = Integer.parseInt(String.valueOf(x.charAt(2)));
                    int c3 = Integer.parseInt(String.valueOf(x.charAt(3)));
                    int c4 = Integer.parseInt(String.valueOf(x.charAt(4)));
                    int c5 = Integer.parseInt(String.valueOf(x.charAt(5)));
                    int c6 = Integer.parseInt(String.valueOf(x.charAt(6)));
                    int c7 = Integer.parseInt(String.valueOf(x.charAt(7)));
                    int c8 = Integer.parseInt(String.valueOf(x.charAt(8)));
                    int c9 = Integer.parseInt(String.valueOf(x.charAt(9)));
                    int c10 = Integer.parseInt(String.valueOf(x.charAt(10)));
                    int c11 = Integer.parseInt(String.valueOf(x.charAt(11)));
                    int c12 = Integer.parseInt(String.valueOf(x.charAt(12)));
                    if(x.length() == 15 && c0 == 3
                            && (c1 == 4 || c1 == 7)){
                        int c13 = Integer.parseInt(String.valueOf(x.charAt(13)));
                        int c14 = Integer.parseInt(String.valueOf(x.charAt(14)));
                        
                        int d1,d3,d5,d7,d9,d11,d13;
                        if(c13 != 0){d13 = (c13*2) % 9 == 0 ? 9 : (c13*2) % 9;} else {d13 = 0;}                     
                        if(c11 != 0){d11 = (c11*2) % 9 == 0 ? 9 : (c11*2) % 9;} else {d11 = 0;}
                        if(c9 != 0){d9 = (c9*2) % 9 == 0 ? 9 : (c9*2) % 9;} else {d9 = 0;}
                        if(c7 != 0){d7 = (c7*2) % 9 == 0 ? 9 : (c7*2) % 9;} else {d7 = 0;}
                        if(c5 != 0){d5 = (c5*2) % 9 == 0 ? 9 : (c5*2) % 9;} else {d5 = 0;}
                        if(c3 != 0){d3 = (c3*2) % 9 == 0 ? 9 : (c3*2) % 9;} else {d3 = 0;}                        
                        if(c1 != 0){d1 = (c1*2) % 9 == 0 ? 9 : (c1*2) % 9;} else {d1 = 0;}                        
                        
                        int A = c0 + d1 + c2 + d3 + c4 + d5 + c6 + d7 + c8 + d9 + c10 + d11 + c12 + d13 + c14;
                        if(A%10 == 0){
                            ResultText.setText("American Express Card VALIDATED!");
                        }
                    }
                    else if(x.length() == 13 && c0 == 4                            
                            ){
                        
                        int d1,d3,d5,d7,d9,d11;
                        if(c11 != 0){d11 = (c11*2) % 9 == 0 ? 9 : (c11*2) % 9;} else {d11 = 0;}
                        if(c9 != 0){d9 = (c9*2) % 9 == 0 ? 9 : (c9*2) % 9;} else {d9 = 0;}
                        if(c7 != 0){d7 = (c7*2) % 9 == 0 ? 9 : (c7*2) % 9;} else {d7 = 0;}
                        if(c5 != 0){d5 = (c5*2) % 9 == 0 ? 9 : (c5*2) % 9;} else {d5 = 0;}
                        if(c3 != 0){d3 = (c3*2) % 9 == 0 ? 9 : (c3*2) % 9;} else {d3 = 0;}                        
                        if(c1 != 0){d1 = (c1*2) % 9 == 0 ? 9 : (c1*2) % 9;} else {d1 = 0;}                        
                        
                        
                        int A = c0 + d1 + c2 + d3 + c4 + d5 + c6 + d7 + c8 + d9 + c10 + d11 + c12;
                        if(A%10 == 0){
                            ResultText.setText("Visa Card VALIDATED!");
                        }                                                
                    }
                    else if(x.length() == 16 && c0 == 4                            
                            ){
                        int c13 = Integer.parseInt(String.valueOf(x.charAt(13)));
                        int c14 = Integer.parseInt(String.valueOf(x.charAt(14)));
                        int c15 = Integer.parseInt(String.valueOf(x.charAt(15)));                       
                        
                        int d0,d2,d4,d6,d8,d10,d12,d14;
                        if(c14 != 0){d14 = (c14*2) % 9 == 0 ? 9 : (c14*2) % 9;} else {d14 = 0;}
                        if(c12 != 0){d12 = (c12*2) % 9 == 0 ? 9 : (c12*2) % 9;} else {d12 = 0;}
                        if(c10 != 0){d10 = (c10*2) % 9 == 0 ? 9 : (c10*2) % 9;} else {d10 = 0;}
                        if(c8 != 0){d8 = (c8*2) % 9 == 0 ? 9 : (c8*2) % 9;} else {d8 = 0;}
                        if(c6 != 0){d6 = (c6*2) % 9 == 0 ? 9 : (c6*2) % 9;} else {d6 = 0;}
                        if(c4 != 0){d4 = (c4*2) % 9 == 0 ? 9 : (c4*2) % 9;} else {d4 = 0;}
                        if(c2 != 0){d2 = (c2*2) % 9 == 0 ? 9 : (c2*2) % 9;} else {d2 = 0;}                        
                        if(c0 != 0){d0 = (c0*2) % 9 == 0 ? 9 : (c0*2) % 9;} else {d0 = 0;}

                        int A = d0 + c1 + d2 + c3 + d4 + c5 + d6 + c7 + d8 + c9 + d10 + c11 + d12 + c13 + d14 + c15;
                        System.out.println(A);
                        if(A%10 == 0){
                            ResultText.setText("Visa Card VALIDATED!");
                        }                                                
                    }

                    else if(x.length() == 16 && c0 == 5
                            && (c1 == 1 || c1 == 2 || c1 == 3 || c1 == 4 || c1 == 5)
                            ){
                        int c13 = Integer.parseInt(String.valueOf(x.charAt(13)));
                        int c14 = Integer.parseInt(String.valueOf(x.charAt(14)));
                        int c15 = Integer.parseInt(String.valueOf(x.charAt(15)));                       
                        int d0,d2,d4,d6,d8,d10,d12,d14;
                        if(c14 != 0){d14 = (c14*2) % 9 == 0 ? 9 : (c14*2) % 9;} else {d14 = 0;}
                        if(c12 != 0){d12 = (c12*2) % 9 == 0 ? 9 : (c12*2) % 9;} else {d12 = 0;}
                        if(c10 != 0){d10 = (c10*2) % 9 == 0 ? 9 : (c10*2) % 9;} else {d10 = 0;}
                        if(c8 != 0){d8 = (c8*2) % 9 == 0 ? 9 : (c8*2) % 9;} else {d8 = 0;}
                        if(c6 != 0){d6 = (c6*2) % 9 == 0 ? 9 : (c6*2) % 9;} else {d6 = 0;}
                        if(c4 != 0){d4 = (c4*2) % 9 == 0 ? 9 : (c4*2) % 9;} else {d4 = 0;}
                        if(c2 != 0){d2 = (c2*2) % 9 == 0 ? 9 : (c2*2) % 9;} else {d2 = 0;}                        
                        if(c0 != 0){d0 = (c0*2) % 9 == 0 ? 9 : (c0*2) % 9;} else {d0 = 0;}
                        int A = d0 + c1 + d2 + c3 + d4 + c5 + d6 + c7 + d8 + c9 + d10 + c11 + d12 + c13 + d14 + c15;
                        if(A%10 == 0){
                            ResultText.setText("Master Card VALIDATED!");
                        }                                                
                    }                    
                    
                }
                else{
                    ResultText.setText("Numbers only allowed!");
                }
            }
        }
        

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EnteredText;
    private javax.swing.JLabel ResultText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
